# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\kwikpic.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os, threading
import cv2

QUALITY_PERCENTAGE = 90

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(636, 590)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("LOGO/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap("LOGO/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon.addPixmap(QtGui.QPixmap("LOGO/logo.png"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap("LOGO/logo.png"), QtGui.QIcon.Disabled, QtGui.QIcon.On)
        icon.addPixmap(QtGui.QPixmap("LOGO/logo.png"), QtGui.QIcon.Active, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap("LOGO/logo.png"), QtGui.QIcon.Active, QtGui.QIcon.On)
        icon.addPixmap(QtGui.QPixmap("LOGO/logo.png"), QtGui.QIcon.Selected, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap("LOGO/logo.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        Form.setWindowIcon(icon)
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(160, 30, 321, 231))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("LOGO/logo.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(Form)
        self.lineEdit.setGeometry(QtCore.QRect(200, 290, 280, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(60, 290, 111, 21))
        self.label_2.setObjectName("label_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(Form)
        self.lineEdit_2.setGeometry(QtCore.QRect(200, 320, 280, 21))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(60, 320, 120, 25))
        self.label_3.setObjectName("label_3")
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(500, 285, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Form)
        self.pushButton_2.setGeometry(QtCore.QRect(500, 317, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(Form)
        self.pushButton_3.setGeometry(QtCore.QRect(260, 360, 91, 31))
        self.pushButton_3.setObjectName("pushButton_3")
        self.label_4 = QtWidgets.QLabel(Form)
        self.label_4.setGeometry(QtCore.QRect(50, 410, 501, 21))
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Kwikpic Image Optimizer"))
        self.label_2.setText(_translate("Form", "Source Folder       :"))
        self.label_3.setText(_translate("Form", "Destination Folder:"))
        self.pushButton.setText(_translate("Form", "Choose"))
        self.pushButton_2.setText(_translate("Form", "Choose"))
        self.pushButton_3.setText(_translate("Form", "Optimize"))

        self.pushButton.clicked.connect(self.selectSourceFolder)
        self.pushButton_2.clicked.connect(self.selectDestFolder)
        self.pushButton_3.clicked.connect(self.compressThread)

    def selectSourceFolder(self):
        folder = QtWidgets.QFileDialog.getExistingDirectory(Form,"Choose Source Folder")
        self.lineEdit.setText(folder)

    def selectDestFolder(self):
        folder = QtWidgets.QFileDialog.getExistingDirectory(Form,"Choose Destination Folder")
        self.lineEdit_2.setText(folder)

    def compressThread(self):
        if self.lineEdit.text()==None or self.lineEdit.text()=="":
            self.label_4.setText("Please Select a Source Folder.")
            return
        if self.lineEdit_2.text()==None or self.lineEdit_2.text()=="":
            self.label_4.setText("Please Select a Destination Folder.")
            return   
        x = threading.Thread(target=self.compress)
        x.start()

    def compress(self):
        UNKNOWN_DIR = self.lineEdit.text()
        COMPRESS_DIR = self.lineEdit_2.text()+"/Optimized/"
        
        if not os.path.exists(COMPRESS_DIR):
            os.mkdir(COMPRESS_DIR)
        print("Optimizing", UNKNOWN_DIR)

        count = sum([len(files) for r, d, files in os.walk(UNKNOWN_DIR)])
        curr_count = 0

        for path, _, files in os.walk(UNKNOWN_DIR):

            for img_name in files:
                curr_count+=1
                self.label_4.setText(str(str(curr_count)+" out of "+str(count)+" images optimized"))
                img_path = os.path.join(path, img_name)

                img_rel_path = os.path.relpath(img_path, UNKNOWN_DIR)

                img_name = os.path.basename(img_path)
                try:
                    img = cv2.imread(img_path)
                except:
                    continue

                if img is not None:
                    print('Original Dimensions : '+img_name,img.shape)

                    scale_percent = 60 
                    shape = img.shape
                    if shape[0] > shape[1]:
                        if shape[0] <= 2160:
                            scale_percent = 100
                        else:
                            scale_percent = 216000 / shape[0]
                            print(scale_percent)
                    else:
                        if shape[1] <= 2160:
                            scale_percent = 100
                        else:
                            scale_percent = 216000 / shape[1]
                            print(scale_percent)

                    width = int(img.shape[1] * scale_percent / 100)
                    height = int(img.shape[0] * scale_percent / 100)
                    dim = (width, height)
                    
                    resized = cv2.resize(img, dim, interpolation = cv2.INTER_AREA)
                    
                    print('Resized Dimensions : ',resized.shape)

                    dir_name = os.path.dirname(img_rel_path)
                    print(dir_name)
                    if not os.path.exists(COMPRESS_DIR+dir_name) and not COMPRESS_DIR+dir_name == "":
                        os.makedirs(COMPRESS_DIR+dir_name)
                    cv2.imwrite(COMPRESS_DIR+img_rel_path, resized, [int(cv2.IMWRITE_JPEG_QUALITY), QUALITY_PERCENTAGE])

        self.label_4.setText("Complete. "+str(curr_count)+" images optimized")
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
